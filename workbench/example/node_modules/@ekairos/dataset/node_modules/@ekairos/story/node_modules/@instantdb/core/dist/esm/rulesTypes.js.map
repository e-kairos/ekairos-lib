{"version":3,"file":"rulesTypes.js","sourceRoot":"","sources":["../../src/rulesTypes.ts"],"names":[],"mappings":"","sourcesContent":["import { InstantSchemaDef, InstantUnknownSchema } from './schemaTypes.ts';\n\ntype InstantRulesAttrsAllowBlock = {\n  $default?: string | null | undefined;\n  view?: string | null | undefined;\n  create?: string | null | undefined;\n  update?: string | null | undefined;\n  delete?: string | null | undefined;\n};\n\nexport type InstantRulesAllowBlock = InstantRulesAttrsAllowBlock & {\n  link?: { [key: string]: string } | null | undefined;\n  unlink?: { [key: string]: string } | null | undefined;\n};\n\nexport type InstantRules<\n  Schema extends InstantSchemaDef<any, any, any> = InstantUnknownSchema,\n> = {\n  $default?: { bind?: string[]; allow: InstantRulesAllowBlock };\n  attrs?: { bind?: string[]; allow: InstantRulesAttrsAllowBlock };\n} & {\n  [EntityName in keyof Schema['entities']]: {\n    bind?: string[];\n    allow: InstantRulesAllowBlock;\n  };\n};\n"]}
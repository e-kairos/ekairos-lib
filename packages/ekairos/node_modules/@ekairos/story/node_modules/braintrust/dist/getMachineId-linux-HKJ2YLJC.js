"use strict";Object.defineProperty(exports, "__esModule", {value: true});



var _chunkCDBUTZMHjs = require('./chunk-CDBUTZMH.js');

// ../../node_modules/.pnpm/@opentelemetry+resources@2.0.1_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js
var _fs = require('fs');
async function getMachineId() {
  const paths = ["/etc/machine-id", "/var/lib/dbus/machine-id"];
  for (const path of paths) {
    try {
      const result = await _fs.promises.readFile(path, { encoding: "utf8" });
      return result.trim();
    } catch (e) {
      _chunkCDBUTZMHjs.diag.debug(`error reading machine id: ${e}`);
    }
  }
  return void 0;
}
var init_getMachineId_linux = _chunkCDBUTZMHjs.__esm.call(void 0, {
  "../../node_modules/.pnpm/@opentelemetry+resources@2.0.1_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js"() {
    _chunkCDBUTZMHjs.init_esm.call(void 0, );
  }
});
init_getMachineId_linux();


exports.getMachineId = getMachineId;

"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }

var _chunkCDBUTZMHjs = require('./chunk-CDBUTZMH.js');

// ../../node_modules/.pnpm/@opentelemetry+resources@2.0.1_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js
var _child_process = require('child_process'); var child_process = _interopRequireWildcard(_child_process);
var _util = require('util'); var util = _interopRequireWildcard(_util);
var execAsync;
var init_execAsync = _chunkCDBUTZMHjs.__esm.call(void 0, {
  "../../node_modules/.pnpm/@opentelemetry+resources@2.0.1_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js"() {
    "use strict";
    execAsync = exports.execAsync = util.promisify(child_process.exec);
  }
});




exports.execAsync = execAsync; exports.init_execAsync = init_execAsync;

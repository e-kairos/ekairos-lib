"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendTimeoutResponse = exports.SandboxesResponse = exports.LogLine = exports.EmptyResponse = exports.CommandFinishedResponse = exports.CommandResponse = exports.SandboxAndRoutesResponse = exports.SandboxResponse = exports.Command = exports.Pagination = exports.SandboxRoute = exports.Sandbox = void 0;
const zod_1 = require("zod");
exports.Sandbox = zod_1.z.object({
    id: zod_1.z.string(),
    memory: zod_1.z.number(),
    vcpus: zod_1.z.number(),
    region: zod_1.z.string(),
    runtime: zod_1.z.string(),
    timeout: zod_1.z.number(),
    status: zod_1.z.enum(["pending", "running", "stopping", "stopped", "failed"]),
    requestedAt: zod_1.z.number(),
    startedAt: zod_1.z.number().optional(),
    requestedStopAt: zod_1.z.number().optional(),
    stoppedAt: zod_1.z.number().optional(),
    duration: zod_1.z.number().optional(),
    createdAt: zod_1.z.number(),
    cwd: zod_1.z.string(),
    updatedAt: zod_1.z.number(),
});
exports.SandboxRoute = zod_1.z.object({
    url: zod_1.z.string(),
    subdomain: zod_1.z.string(),
    port: zod_1.z.number(),
});
exports.Pagination = zod_1.z.object({
    /**
     * Amount of items in the current page.
     * @example 20
     */
    count: zod_1.z.number(),
    /**
     * Timestamp that must be used to request the next page.
     * @example 1540095775951
     */
    next: zod_1.z.number().nullable(),
    /**
     * Timestamp that must be used to request the previous page.
     * @example 1540095775951
     */
    prev: zod_1.z.number().nullable(),
});
exports.Command = zod_1.z.object({
    id: zod_1.z.string(),
    name: zod_1.z.string(),
    args: zod_1.z.array(zod_1.z.string()),
    cwd: zod_1.z.string(),
    sandboxId: zod_1.z.string(),
    exitCode: zod_1.z.number().nullable(),
    startedAt: zod_1.z.number(),
});
const CommandFinished = exports.Command.extend({
    exitCode: zod_1.z.number(),
});
exports.SandboxResponse = zod_1.z.object({
    sandbox: exports.Sandbox,
});
exports.SandboxAndRoutesResponse = exports.SandboxResponse.extend({
    routes: zod_1.z.array(exports.SandboxRoute),
});
exports.CommandResponse = zod_1.z.object({
    command: exports.Command,
});
exports.CommandFinishedResponse = zod_1.z.object({
    command: CommandFinished,
});
exports.EmptyResponse = zod_1.z.object({});
exports.LogLine = zod_1.z.object({
    stream: zod_1.z.enum(["stdout", "stderr"]),
    data: zod_1.z.string(),
});
exports.SandboxesResponse = zod_1.z.object({
    sandboxes: zod_1.z.array(exports.Sandbox),
    pagination: exports.Pagination,
});
exports.ExtendTimeoutResponse = zod_1.z.object({
    sandbox: exports.Sandbox,
});
